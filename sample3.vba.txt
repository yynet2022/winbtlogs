Option VBASupport 1
Option Explicit

REM  *****  BASIC  *****

Sub セットアップ
	Const i日付 As Integer = 1
	Const i勤務日種別 As Integer = 4
	Const t休日 As Integer = 10

	Dim 年 As Integer, 月 As Integer
	年 = Cells(9,2)
	月 = Cells(9,3)

	Dim dateS As Date: dateS = DateSerial (年, 月, 1)
	Dim dateE As Date: dateE = DateSerial (年, 月+1, 0)
	Dim idate As Date
	Dim k As Integer: k = 11
	For idate = dateS To dateE
		Cells(k, i日付) = idate
		If Weekday(idate) = vbSunday Or Weekday(idate) = vbSaturday Then
			Cells (k, i勤務日種別) = t休日
		ElseIf Cells (k, i勤務日種別) = t休日 Then
			Cells (k, i勤務日種別).ClearContents
		End If
		k = k + 1
	Next idate

	Range(Cells(k, 1), Cells(k, 30)).ClearContents
	Cells(k, i日付).Value = "合計"
	k = k + 1

	Dim j As Integer
	for j = k To k + 5
		Range(Cells(j, 1), Cells(j, 30)).ClearContents
	Next j
End Sub

Sub メイン
	Const i開始 As Integer = 2
	Const i終了 As Integer = 3
	
	Dim 定時(2) As Date
	定時(1) = Cells(2, i開始)
	定時(2) = CElls(2, i終了)
		
	Dim 昼休み(2) As Date
	昼休み(1) = Cells(3, i開始)
	昼休み(2) = Cells(3, i終了)
	
	Dim 朝休み(2) As Date
	朝休み(1) = Cells(4, i開始)
	朝休み(2) = Cells(4, i終了)

	Dim 夕休み(2) As Date
	夕休み(1) = Cells(5, i開始)
	夕休み(2) = Cells(5, i終了)

	Dim 夕休みAM(2) As Date
	夕休みAM(1) = Cells(6, i開始)
	夕休みAM(2) = Cells(6, i終了)

	Dim 深夜休み(2) As Date
	深夜休み(1) = Cells(7, i開始)
	深夜休み(2) = Cells(7, i終了)

	Dim 勤務中断(2) As Date, dummy(2) As Date
	dummy(1) = 0
	dummy(2) = 0

	Dim 年 As Integer, 月 As Integer
	年 = Cells(9,2)
	月 = Cells(9,3)

	Const i日付 As Integer = 1
	Const i勤務開始 As Integer = 2
	Const i勤務終了 As Integer = 3
	Const i勤務日種別 As Integer = 4
	Const i休憩時間 As Integer = 5
	Const i実労働時間 As Integer = 6
	Const i残業時間正 As Integer = 7
	Const i残業時間負 As Integer = 8
	Const i勤務中断 As Integer = 9

	Const t勤務 As Integer = 0
	Const tAM休 As Integer = 1
	Const tPM休 As Integer = 2
	Const t終日休 As Integer = 3
	Const t休日 As Integer = 10

	Dim j As Integer
	Dim v, u

	Dim dateS As Date: dateS = DateSerial (年, 月, 1)
	Dim dateE As Date: dateE = DateSerial (年, 月+1, 0)
	Dim idate As Date
	Dim k As Integer: k = 11
	For idate = dateS To dateE
		' Cells(k, i日付) = idate

		Dim 勤務日種別 As Integer
		勤務日種別 = Cells (k, i勤務日種別)
		If 勤務日種別 = t終日休 Then
			Cells(k, i開始).ClearContents
			Cells(k, i終了).ClearContents
		End If

		Dim 休憩時間 As Date
		休憩時間 = 0

		Dim 定時時間 As Date
		定時時間 = 0

		if Not IsDate(Cells(k, i勤務開始).Value) Or Not IsDate(Cells(k, i勤務終了).Value) Then
			With Range(Cells(k, i休憩時間), Cells(k, i残業時間負))
				.Value = 0
				.NumberFormatLocal = "[h]:mm"
				.ClearContents
			End with
		Else
			Dim 勤務開始 As Date, 勤務終了 As Date
			勤務開始 = Cells (k, i勤務開始)
			勤務終了 = Cells (k, i勤務終了)

			If 勤務日種別 = t休日 Then
				j = 0
				Do Until Not IsDate(Cells(k, i勤務中断+j).Value) Or Not IsDate(Cells(k, i勤務中断+j+1).Value)
					勤務中断(1) = _Max(勤務開始, Cells(k, i勤務中断 + j    ))
					勤務中断(2) = _Min(勤務終了, Cells(k, i勤務中断 + j + 1))
					Cells(k, i勤務中断 + j    ).NumberFormatLocal = "[h]:mm"
					Cells(k, i勤務中断 + j + 1).NumberFormatLocal = "[h]:mm"
					休憩時間 = 休憩時間 + 中断時間(勤務中断(), dummy(), dummy(), dummy())
					j = j + 2
				Loop
			ElseIf 勤務日種別 = tAM休 Then
				If 勤務開始 < 昼休み(2) Then
					休憩時間 = 休憩時間 + (昼休み(2) - 勤務開始)
				End If
				定時時間 = 定時(2) - 昼休み(2)

				v = _Max(勤務開始, 夕休みAM(1))
				u = _Min(勤務終了, 夕休みAM(2))
				If v < u Then 休憩時間 = 休憩時間 + (u - v)

				j = 0
				Do Until Not IsDate(Cells(k, i勤務中断+j).Value) Or Not IsDate(Cells(k, i勤務中断+j+1).Value)
					勤務中断(1) = _Max(昼休み(2), _Max(勤務開始, Cells(k, i勤務中断 + j)))
					勤務中断(2) = _Min(勤務終了, Cells(k, i勤務中断 + j + 1))
					Cells(k, i勤務中断 + j    ).NumberFormatLocal = "[h]:mm"
					Cells(k, i勤務中断 + j + 1).NumberFormatLocal = "[h]:mm"
					休憩時間 = 休憩時間 + 中断時間(勤務中断(), 昼休み(), 朝休み(), 夕休みAM())
					j = j + 2
				Loop
			Else
				If 勤務開始 < 朝休み(2) Then
					休憩時間 = 休憩時間 + (朝休み(2) - 勤務開始)
				End If

				If 勤務日種別 = tPM休 Then
					If 昼休み(1) < 勤務終了 Then
						休憩時間 = 休憩時間 + (勤務終了 - 昼休み(1))
					End If
					定時時間 = 昼休み(1) - 定時(1)
				Else
					v = _Max(勤務開始, 昼休み(1))
					u = _Min(勤務終了, 昼休み(2))
					If v < u Then 休憩時間 = 休憩時間 + (u - v)
					定時時間 = (定時(2) - 定時(1)) - (昼休み(2) - 昼休み(1))
				End If

				v = _Max(勤務開始, 夕休み(1))
				u = _Min(勤務終了, 夕休み(2))
				If v < u Then 休憩時間 = 休憩時間 + (u - v)

				j = 0
				Do Until Not IsDate(Cells(k, i勤務中断+j).Value) Or Not IsDate(Cells(k, i勤務中断+j+1).Value)
					勤務中断(1) = _Max(勤務開始, Cells(k, i勤務中断 + j    ))
					勤務中断(2) = _Min(勤務終了, Cells(k, i勤務中断 + j + 1))
					Cells(k, i勤務中断 + j    ).NumberFormatLocal = "[h]:mm"
					Cells(k, i勤務中断 + j + 1).NumberFormatLocal = "[h]:mm"
					休憩時間 = 休憩時間 + 中断時間(勤務中断(), 昼休み(), 朝休み(), 夕休み())
					j = j + 2
				Loop
			End If

			Dim 実労働時間 As Date
			If 勤務終了 < 勤務開始 + 休憩時間 Then
				実労働時間 = 0
			Else
				実労働時間 = 勤務終了 - 勤務開始 - 休憩時間
			End If
			Cells(k, i休憩時間).NumberFormatLocal = "[h]:mm"
			Cells(k, i休憩時間).Value = 休憩時間
			Cells(k, i実労働時間).NumberFormatLocal = "[h]:mm"
			Cells(k, i実労働時間).Value = 実労働時間
			If 実労働時間 < 定時時間 Then
				Cells(k, i残業時間正).ClearContents
				Cells(k, i残業時間負).NumberFormatLocal = "[h]:mm"
				Cells(k, i残業時間負).Value = 定時時間 - 実労働時間
			Else
				Cells(k, i残業時間正).NumberFormatLocal = "[h]:mm"
				Cells(k, i残業時間正).Value = 実労働時間 - 定時時間
				Cells(k, i残業時間負).ClearContents
			End If
		End If
		k = k + 1
	Next idate

	Cells(k, i休憩時間).NumberFormatLocal = "[h]:mm"
	Cells(k, i休憩時間).Value = WorksheetFunction.Sum(Range(Cells(11,i休憩時間),Cells(k-1,i休憩時間)))
	Cells(k, i実労働時間).NumberFormatLocal = "[h]:mm"
	Cells(k, i実労働時間).Value = WorksheetFunction.Sum(Range(Cells(11,i実労働時間),Cells(k-1,i実労働時間)))
	Cells(k, i残業時間正).NumberFormatLocal = "[h]:mm"
	Cells(k, i残業時間正).Value = WorksheetFunction.Sum(Range(Cells(11,i残業時間正),Cells(k-1,i残業時間正)))
	Cells(k, i残業時間負).NumberFormatLocal = "[h]:mm"
	Cells(k, i残業時間負).Value = WorksheetFunction.Sum(Range(Cells(11,i残業時間負),Cells(k-1,i残業時間負)))
End Sub

Private Function 中断時間(中断() As Date, 昼休み() As Date, 朝休み() As Date, 夕休み() As Date) As Date
	Dim v, u, t
	t = 0

	v = _Max(中断(1), 昼休み(1))
	u = _Min(中断(2), 昼休み(2))
	If v < u Then t = t + (u - v)

	v = _Max(中断(1), 朝休み(1))
	u = _Min(中断(2), 朝休み(2))
	If v < u Then t = t + (u - v)

	v = _Max(中断(1), 夕休み(1))
	u = _Min(中断(2), 夕休み(2))
	If v < u Then t = t + (u - v)

	if 中断(2) < 中断(1) + t Then
		中断時間 = 0
	Else
		中断時間 = 中断(2) - 中断(1) - t
	End If
End Function

Private Function _Max(a,b)
	_Max = a
	If b > a Then _Max = b
End Function

Private Function _Min(a,b)
	_Min = a
	If b < a Then _Min = b
End Function
